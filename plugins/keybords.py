from random import choice

emoticons = ['üî•', '‚ù§', 'Ô∏èü§°', 'ü§Æ', 'üíã', 'üëÖ', 'üëÄ', 'üêí', 'üçí', 'ü•ü', 'üç§']

# reveal_button = [
#     {
#         "text": "–†–∞—Å–∫—Ä—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é?",
#         "callback_data": "–†–∞—Å–∫—Ä—ã—Ç—å"
#     }
# ]

reveal_button = [
    {
        "text": "–†–∞—Å–∫—Ä—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é?",
        "callback_data": "–†–∞—Å–∫—Ä—ã—Ç—å"
    }
]


inline_keyboard_for_hello = [
    [
        {
            "text": "JavaScript",
            "callback_data": "JavaScript"
        },
        {
            "text": "Python",
            "callback_data": "Python"

        },
    ],
    [
        {
            "text": "Java, Scala",
            "callback_data": "Java, Scala"
        },
        {
            "text": "C/C++, Assembler",
            "callback_data": "C/C++, Assembler"
        }
    ],
    [
        {
            "text": "PHP",
            "callback_data": "PHP"
        },
        {
            "text": ".NET",
            "callback_data": ".NET"
        },
        {
            "text": "QA",
            "callback_data": "QA"
        }
    ],
    [
        {
            "text": "DevOps",
            "callback_data": "DevOps"
        },
        {
            "text": "IOS",
            "callback_data": "IOS"
        },
        {
            "text": "Golang",
            "callback_data": "Golang"
        }
    ],
    [
        {
            "text": "Data Science",
            "callback_data": "DS, Data Science"
        },
        {
            "text": "Security",
            "callback_data": "Security, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
        },
    ],
    [
        {
            "text": "Analyst",
            "callback_data": "Analyst"
        },
        {
            "text": "Manager",
            "callback_data": "Manager"
        }
    ]

]


def generate_pagination_keyboard(url: str, reveal_text: bool = True):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–∞–º–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    :param reveal_text: –≤—ã–≤–æ–¥–∏—Ç—å –∫–Ω–æ–ø–∫—É  "–†–∞—Å–∫—Ä—ã—Ç—å" –∏–ª–∏ –Ω–µ—Ç
    :param url: —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
    :return:
    """
    inline_keyboard_for_pagination = [
        [

            {
                "text": "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É",
                "callback_data": "–í –Ω–∞—á–∞–ª–æ"

            },

            {
                "text": "–°–ª–µ–¥—É—é—â–∞—è",
                "callback_data": "–°–ª–µ–¥—É—é—â–∞—è"
            }
        ],
        [
            {
                "text": "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
                "callback_data": "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
            },
            {
                "text": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ",
                "callback_data": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
            }
        ],
        [
            {
                "text": "–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
                "callback_data": "–û—á–∏—Å—Ç–∏—Ç—å"
            }
        ],
        [
            {
                "text": "–û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Ç–∫–ª–∏–∫",
                "url": url,
                "callback_data": ""
            }
        ]
    ]

    if reveal_text:
        inline_keyboard_for_pagination.insert(0, reveal_button)
    return inline_keyboard_for_pagination


def generate_check_box_keyboard(url: str, reveal_text: bool = True):
    """
    –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫ –≤ –º–æ–º–µ–Ω—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±–∞–Ω–Ω–æ–µ"
    :param reveal_text: –≤—ã–≤–æ–¥–∏—Ç—å –∫–Ω–æ–ø–∫—É  "–†–∞—Å–∫—Ä—ã—Ç—å" –∏–ª–∏ –Ω–µ—Ç
    :param url: —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
    :return: –≥–æ—Ç–æ–≤—ã–µ –º–∞—Å—Å–∏–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """
    inline_keyboard_for_check_box = [
        [
            {
                "text": "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É",
                "callback_data": "–í –Ω–∞—á–∞–ª–æ"

            },
            {
                "text": "–°–ª–µ–¥—É—é—â–∞—è",
                "callback_data": "–°–ª–µ–¥—É—é—â–∞—è"
            },
        ],
        [
            {
                "text": "–î–æ–±–∞–≤–∏–ª üëç",
                "callback_data": "–î–æ–±–∞–≤–∏–ª"
            },
            {
                "text": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ",
                "callback_data": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
            }
        ],
        [
            {
                "text": "–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
                "callback_data": "–û—á–∏—Å—Ç–∏—Ç—å"
            }
        ],
        [
            {
                "text": "–û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Ç–∫–ª–∏–∫",
                "url": url,
                "callback_data": ""
            }
        ]
    ]
    if reveal_text:
        inline_keyboard_for_check_box.insert(0, reveal_button)
    return inline_keyboard_for_check_box


def generate_emo_keyboard(url: str, reveal_text: bool = True):
    """
    –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
    :param reveal_text:
    :param url:
    :return:
    """
    inline_keyboard_for_emo = [
        [
            {
                "text": "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É",
                "callback_data": "–í –Ω–∞—á–∞–ª–æ"

            },
            {
                "text": "–°–ª–µ–¥—É—é—â–∞—è",
                "callback_data": "–°–ª–µ–¥—É—é—â–∞—è"
            }
        ],
        [
            {
                "text": choice(emoticons),
                "callback_data": "–î–æ–±–∞–≤–∏–ª"
            },
            {
                "text": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ",
                "callback_data": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
            }
        ],
        [
            {
                "text": "–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
                "callback_data": "–û—á–∏—Å—Ç–∏–ª"
            }
        ],
        # [
        #     {
        #         "text": "–û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Ç–∫–ª–∏–∫",
        #         "url": url,
        #         "callback_data": ""
        #     }
        # ]
    ]

    if reveal_text:
        inline_keyboard_for_emo.insert(0, reveal_button)
    return inline_keyboard_for_emo


def generate_check_box_for_clean(url: str, double_click: bool = False, reveal_text: bool = True):
    """
    –§—É–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤ –º–æ–º–µ–Ω—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—á–∏—Å—Ç–∏—Ç—å"
    :param reveal_text:
    :param url:
    :param double_click:
    :return:
    """

    if double_click:
        inline_keyboard_for_pagination = [
            [
                {
                    "text": "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É",
                    "callback_data": "–í –Ω–∞—á–∞–ª–æ"

                },
                {
                    "text": "–°–ª–µ–¥—É—é—â–∞—è",
                    "callback_data": "–°–ª–µ–¥—É—é—â–∞—è"
                },
            ],
            [
                {
                    "text": "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
                    "callback_data": "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
                },
                {
                    "text": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ",
                    "callback_data": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
                }
            ],
            [
                {
                    "text": choice(emoticons),
                    "callback_data": "–û—á–∏—Å—Ç–∏–ª"
                }
            ],
            [
                {
                    "text": "–û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Ç–∫–ª–∏–∫",
                    "url": url,
                    "callback_data": ""
                }
            ]
        ]
    else:
        inline_keyboard_for_pagination = [
            [
                {
                    "text": "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É",
                    "callback_data": "–í –Ω–∞—á–∞–ª–æ"

                },
                {
                    "text": "–°–ª–µ–¥—É—é—â–∞—è",
                    "callback_data": "–°–ª–µ–¥—É—é—â–∞—è"
                },
            ],
            [
                {
                    "text": "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
                    "callback_data": "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
                },
                {
                    "text": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ",
                    "callback_data": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
                }
            ],
            [
                {
                    "text": "–û—á–∏—Å—Ç–∏–ª üëç",
                    "callback_data": "–û—á–∏—Å—Ç–∏–ª"
                }
            ],
            [
                {
                    "text": "–û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Ç–∫–ª–∏–∫",
                    "url": url,
                    "callback_data": ""
                }
            ]
        ]

    if reveal_text:
        inline_keyboard_for_pagination.insert(0, reveal_button)

    return inline_keyboard_for_pagination


def generate_keyboard_for_likes(url: str, reveal_text: bool = True):
    """
    –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞–ª–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
    :param reveal_text:
    :param url:
    :return:
    """

    inline_keyboard_for_likes = [
        [
            {
                "text": "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É",
                "callback_data": "–í –Ω–∞—á–∞–ª–æ"

            },
            {
                "text": "–°–ª–µ–¥—É—é—â–∞—è",
                "callback_data": "–°–ª–µ–¥—É—é—â–∞—è"
            },
        ],
        [
            {
                "text": "–û–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Ç–∫–ª–∏–∫",
                "url": url,
                "callback_data": ""
            }
        ]
    ]
    if reveal_text:
        inline_keyboard_for_likes.insert(0, reveal_button)
    return inline_keyboard_for_likes
